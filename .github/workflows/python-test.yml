# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Testing

# Ref: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
# Triggers the workflow on push pushed to any branch in a repository
on: push

jobs:
  pytest:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    # Ref: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idcontinue-on-error
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        experimental: [false]
        # Ref: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
        os: [macos-latest, ubuntu-latest]
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
# How to add an experimental job:
#          - "3.10.0-alpha.6"
#        include:
#          - python-version: "3.10.0-alpha.6"
#            os: ubuntu-latest
#            experimental: true

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      shell: bash
      run: |
        curl -sSL -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
        python get-poetry.py -y
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Configure poetry
      shell: bash
      run: |
        poetry --version
        poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2.1.6
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry install --no-interaction
    - name: Test with pytest
      run: |
        poetry run pytest --cov=clkhash --cov-report=xml:coverage.xml -q tests

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        env_vars: OS,PYTHON
        fail_ci_if_error: false
        files: ./coverage.xml
        flags: unittests
        name: codecov-blocklib